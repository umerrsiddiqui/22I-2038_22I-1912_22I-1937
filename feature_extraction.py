# -*- coding: utf-8 -*-
"""feature_extraction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ckBug9892fprbFSgshFfZJqMOBji6eaX
"""

import librosa
import numpy as np
import os
import pandas as pd

def extract_features(audio_dir, metadata_file, output_file):
    """
    Extracts audio features from audio files in a directory and saves them to a CSV file.

    Parameters:
        audio_dir (str): Path to the directory containing audio files.
        metadata_file (str): Path to the metadata file containing track details.
        output_file (str): Path to save the extracted features CSV file.
    """
    # Load metadata
    metadata = pd.read_csv(metadata_file)

    # Initialize lists to store features and corresponding track IDs
    features_list = []
    track_ids = []

    # Loop through each audio file in the directory
    for filename in os.listdir(audio_dir):
        # Construct full path to the audio file
        file_path = os.path.join(audio_dir, filename)

        # Load audio file and extract features
        try:
            y, sr = librosa.load(file_path, duration=30)  # Load audio file, limit duration to 30 seconds
            mfccs = librosa.feature.mfcc(y=y, sr=sr, n_mfcc=13)  # Extract MFCCs
            spectral_centroid = librosa.feature.spectral_centroid(y=y, sr=sr)[0]  # Extract spectral centroid
            zero_crossing_rate = librosa.feature.zero_crossing_rate(y)  # Extract zero-crossing rate

            # Aggregate features
            features = np.hstack((np.mean(mfccs, axis=1),
                                  np.mean(spectral_centroid),
                                  np.mean(zero_crossing_rate)))

            # Get track ID from filename
            track_id = int(filename.split('.')[0])

            # Append features and track ID to lists
            features_list.append(features)
            track_ids.append(track_id)

        except Exception as e:
            print(f"Error processing {filename}: {e}")

    # Create DataFrame from features and track IDs
    features_df = pd.DataFrame(features_list, columns=[f'mfcc_{i}' for i in range(1, 14)] +
                                                   ['spectral_centroid_mean', 'zero_crossing_rate_mean'])
    features_df['track_id'] = track_ids

    # Merge with metadata
    features_df = pd.merge(features_df, metadata, on='track_id')

    # Save features to CSV file
    features_df.to_csv(output_file, index=False)

    print(f"Feature extraction complete. Features saved to {output_file}")

def main():
    # Path to the directory containing audio files
    audio_dir = 'audio_files'

    # Path to the metadata file containing track details
    metadata_file = 'metadata.csv'

    # Path to save the extracted features CSV file
    output_file = 'extracted_features.csv'

    # Extract features
    extract_features(audio_dir, metadata_file, output_file)

if __name__ == "__main__":
    main()